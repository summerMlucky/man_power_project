地域名称：hz-33myl-1314348566
所属地域：ap-shanghai
SecretId：AKID45yiIiB83oUPL8lCYovvkOsIf2MXZR9l
SecretKey：Xs1ykMm15412znU3VsAMOEtWFvUwOiwz

虚拟dom
初次渲染=>编译模板=>生成虚拟dom树=>把虚拟dom树编译为真实dom树
数据发生变化=>编辑模板=>又生成一份新的虚拟dom树=>新旧虚拟dom树对比=>找到不一样的地方更新虚拟dom树（哪里不一样把哪里进行更新）

什么是虚拟dom?
虚拟dom本质就是一个js对象,用来描述真正dom是什么样的,这个对象就称为虚拟dom
为什么出现?
虚拟dom可以进行高效更新,同时也可以使用虚拟dom进行跨平台: 开发的代码只是模板代码 => 虚拟dom => web(编译为web的dom) => (小程序的节点)
如何实现高效更新?
初始化渲染的时候,会根据数据和模板生成一份虚拟dom树,当数据发生变化,会根据新的数据和模板生成新的虚拟dom树,将两份虚拟dom树进行对比,对比的算法采用的是diff算法
diff算法?
同级比较.深度优先,而且采用了双指针算法,四个指针,遍历旧的虚拟dom有两个指针,指向开始的位置和结束的位置,同理新的虚拟dom也有这两个指针,循环的时候开始的指针对比完后,指针向后推,后面的指针对比后向前推,从而达到效率提升
diff对比之后的情况?
元素不同: 删除重建
元素相同,属性不同: 元素复用,属性更新
v-for:
无key, 看数据的变化是否影响到顺序,如果影响到顺序,影响到性能
无key, 看数据的变化是否影响到顺序,如果没有影响到顺序,性能没有影响
有key:不建议使用索引,索引会变化,建议使用唯一值,对比的使用key进行对比